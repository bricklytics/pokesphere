[versions]
targetSdk = "34"
jvmTarget = "17"
agp = "8.8.0"
kotlin = "2.1.0"
ksp = "2.1.0-1.0.29"
kotlinx = "1.7.2"
hilt = "2.51.1"
retrofit = "2.9.0"
okhttp = "4.12.0"
gson = "2.9.0"
ktor = "3.0.3"
timber = "5.0.1"
hilt-lifecycle-compose = "1.2.0"
coreKtx = "1.15.0"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
androidxLifecycle = "2.8.7"
androidxRoom = "2.6.1"
androidxArchCore = "2.2.0"
androidXStartup = "1.2.0"
androidxPalette = "1.0.0"
activityCompose = "1.10.0"
composeBom = "2025.01.00"
appcompat = "1.7.0"
material = "1.12.0"
fragment = "1.8.5"
coroutines = "1.10.1"
glide = "4.16.0"
glideCompose = "1.0.0-beta01"
junit = "4.13.2"
robolectric = "4.14.1"
androidxTest = "1.6.1"
androidTestRunner = "1.6.2"
mockito = "5.15.2"
mockito-kotlin = "5.4.0"
awesomeCompose = "1.0.0"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
android-test = { id = "com.android.test", version.ref = "agp" }
dagger-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }

[libraries]
#Compose
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }

#Core Android
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }

#Lifecycle
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }

#Room
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidxRoom" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidxRoom" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "androidxRoom" }

#Testing
androidx-arch-core = { module = "androidx.arch.core:core-testing", version.ref = "androidxArchCore" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTest" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

#Startup
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidXStartup" }
androidx-palette = { module = " androidx.palette:palette-ktx", version.ref = "androidxPalette" }

#Fragment
fragment-kotlin = { group = "androidx.fragment", name = "fragment-ktx", version.ref = "fragment" }
fragment-compose = { group = "androidx.fragment", name = "fragment-compose", version.ref = "fragment" }

#Coroutines
coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx" }

#Retrofit
retrofit-core = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "gson" }

#OkHttp
okhttp-bom = { group = "com.squareup.okhttp3", name = "okhttp-bom", version.ref = "okhttp" }
okhttp-core = { group = "com.squareup.okhttp3", name = "okhttp" }
okhttp-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor" }
okhttp-mockwebserver = { group = "com.squareup.okhttp3", name = "mockwebserver" }

#KTor
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
ktor-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
ktor-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }

#Timber
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }

#Dagger Hilt
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hilt-lifecycle-compose" }

#Coroutines
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

#Glide
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
glide-compose = { module = "com.github.bumptech.glide:compose", version.ref = "glideCompose" }

#Icons - FontAwesome
awesome-compose = { module = "com.github.Gurupreet:FontAwesomeCompose", version.ref = "awesomeCompose" }

# Unit test
junit = { module = "junit:junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-kotlin  = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
android-test-runner = { module = "androidx.test:runner", version.ref = "androidTestRunner" }
